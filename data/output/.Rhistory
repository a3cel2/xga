source('~/.active-rstudio-document')
sigma_a/sigma_t
source('~/.active-rstudio-document')
sigma_a/sigma_t
sigma_a/sigma_t
MSD_wi
MSD_ai_wp
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
MSD_ai_wp
sigma_a/sigma_t
MSD_wi
source('~/.active-rstudio-document')
sigma_a/sigma_t
p1
p2
apply(p1,1,mean)
apply(p1,2,mean)
apply(p2,2,mean)
source('~/.active-rstudio-document')
sigma_a/sigma_t
source('~/.active-rstudio-document')
sigma_a/sigma_t
source('~/.active-rstudio-document')
sigma_a/sigma_t
source('~/.active-rstudio-document')
sigma_a/sigma_t
p1
p2
MSD_ai
MSD_ai_wp
MSD_ap
t.test(rnorm(100),1)
t.test(rnorm(100),rnorm(2))
t.test(rnorm(100),rnorm(2))
t.test(rnorm(100),rnorm(2))
t.test(rnorm(100),rnorm(2))
t.test(rnorm(100),rnorm(2))
t.test(rnorm(100),rnorm(2))
t.test(rnorm(100),rnorm(2))
t.test(rnorm(100),rnorm(2))
replicate(t.test(rnorm(100),rnorm(2)),10)
replicate(10,t.test(rnorm(100),rnorm(2)))
replicate(10,t.test(rnorm(100),rnorm(2))$p.va)
replicate(10,t.test(rnorm(100),rnorm(2))$p.val)
min(replicate(10,t.test(rnorm(100),rnorm(2))$p.val))
min(replicate(10,t.test(rnorm(100),rnorm(2))$p.val))
min(replicate(10,t.test(rnorm(100),rnorm(2))$p.val))
7/8
1-7/8
(1-7/8)/2
1-(1-7/8)/2
factorial(16)
factorial(6)
#R <- sapply(0:1,function(theta){
#  c(cos(theta),-sin(theta),sin(theta),cos(theta))
#})
create_rotation_matrix <- function(i){
rbind(c(cos(i),-sin(i)),c(sin(i),cos(i)))
}
#R <- t(matrix(unlist(sapply(((1:reps)*2*pi)/reps,create_rotation_matrix,simplify=F)),nrow=2))
set.seed(11223344)
par(bg='black')
plot(NULL,
xlim=c(-10,10),
ylim=c(-10,10),
type='n',
axes=F,
xlab='',
ylab='')
# for(i in 1:10){
#   for(j in 1:50){
#     x <- 0
#     y <- 0
#     sign1 <- 1#runif(1,-1,1)#sample(c(-1,1),1)
#     sign2 <- 1#runif(1,-1,1)#sample(c(-1,1),1)
#     col1 <- rgb(1/(1+2^(rnorm(1,sd=5)+i)),
#                 1/(1+2^(rnorm(1,sd=5)+0)),
#                 1/(1+2^(rnorm(1,sd=5)-i)),0.2)
#     #col2 <- rgb(1/(1+2^(rnorm(1,sd=5)+0)),
#     #            1/(1+2^(rnorm(1,sd=5)+0)),
#     #            1/(1+2^(rnorm(1,sd=5)-i)),0.1)
#     line_vector_x <- c(x)
#     line_vector_y <- c(y)
#     for(k in 1:400){
#       x <- x + rnorm(1,sd=0.3/i)*sign1#runif(1,0,0.5)#*sign1#abs(rnorm(1,sd=0.5))*sign1
#       y <- y + rnorm(1,sd=0.3/i)*sign2##runif(1,0,0.5)#*sign2#abs(rnorm(1,sd=0.5))*sign2
#       line_vector_x <- c(line_vector_x,x)
#       line_vector_y <- c(line_vector_y,y)
#     }
#     polygon(line_vector_x,line_vector_y,col=col1,border=col1,lwd=1)
#   }
# }
#stop()
for(i in 1:100) {
pos1_bias <- rnorm(1,sd=5)#runif(1,-10,10)
pos2_bias <- rnorm(1,sd=5)#runif(1,-10,10)
col_bias_r <- runif(1,-6,6)
col_bias_g <- runif(1,-6,6)
col_bias_b <- runif(1,-6,6)
for (j in 1:25) {
reps <- runif(1,10,100)
d <- abs(rnorm(1,sd = 3,mean = 1))
point_vector <- c()
#vec <- c(0,d)
for (theta in ((1:reps) * 2 * pi) / reps) {
R <- rbind(c(cos(theta),-sin(theta)),c(sin(theta),cos(theta)))
vec <- c(0,runif(1,d - (d / 5),d + (d / 5)))
#vec[2] <- vec[2] - runif(1,-(d/100),(d/100))
point_vector <- rbind(point_vector,t(R %*% vec))
}
point_vector[,1] <-
point_vector[,1] + pos1_bias#rnorm(1,sd=3)
point_vector[,2] <-
point_vector[,2] + pos2_bias#rnorm(1,sd=3)
col1 <- rgb(1 / (1 + 2 ^ (rnorm(1,sd = 5) + col_bias_r - 2/d)),
1 / (1 + 2 ^ (rnorm(1,sd = 5) + col_bias_g)),
1 / (1 + 2 ^ (rnorm(1,sd = 5) + col_bias_b - 2/d)),0.03/(d^1.2+0.03))
polygon(point_vector,col = col1,border = col1,lwd = 1)
}
#points(t(matrix(R %*% t(vecs),nrow=2)))
}
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
point_vector
pos1_bias
0.5^0.5
0.1^0.1
0.5*log(0.5)
source('~/Dropbox/Roth Lab/projects/twas_git/scripts/master_v2.R', echo=TRUE)
setwd(this.dir)
tecan_output_path <-
paste(c(output_results_directory, tecan_output_path), collapse = '/')
dir.create(tecan_output_path, showWarnings = FALSE)
summary_output_path = paste(c(tecan_output_path, 'experiment_summary_plots'),
collapse = '/')
dir.create(summary_output_path, showWarnings = FALSE)
genotypes_tested <- c('PDR5', 'SNQ2', 'YOR1', 'YBT1', 'YCF1')
correspondence_dir <- 'all'
setwd(this.dir)
setwd(paste(
c(input_data_directory, 'marinella/', correspondence_dir),
collapse = ''
))
file_correspondence_list <- 'file_correspondence_list.tsv'
od_list <- create_od_list_v2(file_correspondence_list)
drugs <- names(od_list)[names(od_list) != 'dmso']
od_list
od_list$fluconazole
od_list$dmso
tecan_od_list_summary <- function(od_list,drug,concentration){
od_summary <- sapply(
summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
),
mean
)
return(od_summary)
}
for (drug in 'fluconazole') {
for (conc in names(od_list[[drug]])) {
eyo <- tecan_od_list_summary(od_list,drug,concentration)
}
}
tecan_od_list_summary <- function(od_list,
drug,
concentration,
control = 'DMSO',
conc_units = 'uM',
control_conc = '2%',
single_genes = c('PDR5','SNQ2','YOR1','YCF1','YBT1')){
od_summary <- sapply(
summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
),
mean
)
return(od_summary)
}
for (drug in 'fluconazole') {
for (conc in names(od_list[[drug]])) {
eyo <- tecan_od_list_summary(od_list,drug,concentration)
}
}
for (drug in 'fluconazole') {
for (conc in names(od_list[[drug]])) {
eyo <- tecan_od_list_summary(od_list,drug,conc)
}
}
drug
conc
tecan_od_list_summary <- function(od_list,
drug,
concentration,
control = 'dmso',
conc_units = 'uM',
control_conc = '2%',
single_genes = c('PDR5','SNQ2','YOR1','YCF1','YBT1')){
od_summary <- sapply(
summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
),
mean
)
return(od_summary)
}
for (drug in 'fluconazole') {
for (conc in names(od_list[[drug]])) {
eyo <- tecan_od_list_summary(od_list,drug,conc)
}
}
eyo
summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
)
single_genes = c('PDR5','SNQ2','YOR1','YCF1','YBT1')
control_conc = '2%'
conc_units = 'uM'
control = 'dmso'
summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
)
concentration = conc
summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
)
tecan_od_list_summary <- function(od_list,
drug,
concentrations,
control = 'dmso',
conc_units = 'uM',
control_conc = '2%',
single_genes = c('PDR5','SNQ2','YOR1','YCF1','YBT1')){
ret_df <- c()
for (concentration in concentrations) {
od_summary <- sapply(
summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
),mean)
for (geno in names(od_summary)) {
for (measurement in od_summary[[geno]]) {
retval <- c(drug,geno,concentration,measurement)
ret_df <- rbind(ret_df, retval)
}
}
}
return(ret_df)
}
tecan_od_list_summary(od_list,drug,concentration)
tecan_od_list_summary <- function(od_list,
drug,
concentrations,
control = 'dmso',
conc_units = 'uM',
control_conc = '2%',
single_genes = c('PDR5','SNQ2','YOR1','YCF1','YBT1')){
ret_df <- c()
for (concentration in concentrations) {
od_summary <- sapply(
summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
),mean)
for (geno in names(od_summary)) {
for (measurement in od_summary[[geno]]) {
retval <- c(drug,geno,concentration,measurement)
ret_df <- rbind(ret_df, retval)
}
}
}
ret_df <- as.data.frame(retdf)
colnames(ret_df) <- c('Drug','Genotype','Concentration','Resistance')
rownames(ret_df) <- NULL
return(ret_df)
}
tecan_od_list_summary(od_list,drug,concentration)
tecan_od_list_summary <- function(od_list,
drug,
concentrations,
control = 'dmso',
conc_units = 'uM',
control_conc = '2%',
single_genes = c('PDR5','SNQ2','YOR1','YCF1','YBT1')){
ret_df <- c()
for (concentration in concentrations) {
od_summary <- sapply(
summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
),mean)
for (geno in names(od_summary)) {
for (measurement in od_summary[[geno]]) {
retval <- c(drug,geno,concentration,measurement)
ret_df <- rbind(ret_df, retval)
}
}
}
ret_df <- as.data.frame(ret_df)
colnames(ret_df) <- c('Drug','Genotype','Concentration','Resistance')
rownames(ret_df) <- NULL
return(ret_df)
}
tecan_od_list_summary(od_list,drug,concentration)
eyo <- tecan_od_list_summary(od_list, drug, names(od_list[[drug]]))
head(eyo)
diM(eyo)
dim(eyo)
eyo
experiment_summary_df <- tecan_od_list_summary(od_list, drug, names(od_list[[drug]]))
experiment_summary_df <- tecan_od_list_summary(od_list, drug, names(od_list[[drug]]))
setwd(this.dir)
setwd(output_data_directory)
write.csv(experiment_summary_df)
write.csv(experiment_summary_df,sep='\t')
write.table(experiment_summary_df,sep='\t')
write.table(experiment_summary_df,sep='\t',row.names = F)
write.table(experiment_summary_df,sep='\t',row.names = F, quote = F)
write.table(experiment_summary_df,sep='\t',row.names = F, quote = F, sep = '\t')
write.table(experiment_summary_df,sep='\t',row.names = F, quote = F, 'fluconazole_resistance_tecan.tsv')
experiment_summary_df[,3]
unique(experiment_summary_df[,3])
sort(unique(experiment_summary_df[,3]))
head(experiment_summary_df)
apply(experiment_summary_df[,2:3],1,function(x){paste(x,collapse='_')})
table(apply(experiment_summary_df[,2:3],1,function(x){paste(x,collapse='_')}))
apply(experiment_summary_df[,2:3],1,function(x){paste(x,collapse='_')})
ey <- apply(experiment_summary_df[,2:3],1,function(x){paste(x,collapse='_')})
ey[,1]
ey[1:10]
ey[1:20]
ey[1:30]
ey[1:40]
ey[,2]
experiment_summary_df[,3]
tecan_od_list_summary <- function(od_list,
drug,
concentrations,
control = 'dmso',
conc_units = 'uM',
control_conc = '2%',
single_genes = c('PDR5','SNQ2','YOR1','YCF1','YBT1')){
ret_df <- c()
for (concentration in concentrations) {
od_summary <- summarize_tecan_resistance(
od_list,
drug = drug,
drug_conc = concentration,
control = control,
control_conc = control_conc,
genotypes_tested = single_genes
)
for (geno in names(od_summary)) {
for (measurement in od_summary[[geno]]) {
retval <- c(drug,geno,concentration,measurement)
ret_df <- rbind(ret_df, retval)
}
}
}
ret_df <- as.data.frame(ret_df)
colnames(ret_df) <- c('Drug','Genotype','Concentration','Resistance')
rownames(ret_df) <- NULL
return(ret_df)
}
setwd(this.dir)
setwd(paste(
c(input_data_directory, 'marinella/', correspondence_dir),
collapse = ''
))
file_correspondence_list <- 'file_correspondence_list.tsv'
od_list <- create_od_list(file_correspondence_list)
drugs <- names(od_list)[names(od_list) != 'dmso']
#stop()
#    drugs <-
experiment_summary_df <- tecan_od_list_summary(od_list, drug, names(od_list[[drug]]))
setwd(this.dir)
setwd(output_data_directory)
write.table(experiment_summary_df,sep='\t',row.names = F, quote = F, 'fluconazole_resistance_tecan.tsv')
setwd(this.dir)
tecan_output_path <-
paste(c(output_results_directory, tecan_output_path), collapse = '/')
dir.create(tecan_output_path, showWarnings = FALSE)
summary_output_path = paste(c(tecan_output_path, 'experiment_summary_plots'),
collapse = '/')
dir.create(summary_output_path, showWarnings = FALSE)
genotypes_tested <- c('PDR5', 'SNQ2', 'YOR1', 'YBT1', 'YCF1')
correspondence_dir <- 'all'
setwd(this.dir)
setwd(paste(
c(input_data_directory, 'marinella/', correspondence_dir),
collapse = ''
))
file_correspondence_list <- 'file_correspondence_list.tsv'
od_list <- create_od_list(file_correspondence_list)
drugs <- names(od_list)[names(od_list) != 'dmso']
#stop()
#    drugs <-
experiment_summary_df <- tecan_od_list_summary(od_list, drug, names(od_list[[drug]]))
setwd(this.dir)
setwd(output_data_directory)
write.table(experiment_summary_df,sep='\t',row.names = F, quote = F, 'fluconazole_resistance_tecan.tsv')
args(create_od_list_v2)
create_od_list <- create_od_list_v2
setwd(this.dir)
tecan_output_path <-
paste(c(output_results_directory, tecan_output_path), collapse = '/')
dir.create(tecan_output_path, showWarnings = FALSE)
summary_output_path = paste(c(tecan_output_path, 'experiment_summary_plots'),
collapse = '/')
dir.create(summary_output_path, showWarnings = FALSE)
genotypes_tested <- c('PDR5', 'SNQ2', 'YOR1', 'YBT1', 'YCF1')
correspondence_dir <- 'all'
setwd(this.dir)
setwd(paste(
c(input_data_directory, 'marinella/', correspondence_dir),
collapse = ''
))
file_correspondence_list <- 'file_correspondence_list.tsv'
od_list <- create_od_list(file_correspondence_list)
drugs <- names(od_list)[names(od_list) != 'dmso']
#stop()
#    drugs <-
experiment_summary_df <- tecan_od_list_summary(od_list, drug, names(od_list[[drug]]))
setwd(this.dir)
setwd(output_data_directory)
write.table(experiment_summary_df,sep='\t',row.names = F, quote = F, 'fluconazole_resistance_tecan.tsv')
table(apply(experiment_summary_df[,2:3],1,function(x){paste(x,collapse='_')}))
min(table(apply(experiment_summary_df[,2:3],1,function(x){paste(x,collapse='_')})))
max(table(apply(experiment_summary_df[,2:3],1,function(x){paste(x,collapse='_')})))
mean(table(apply(experiment_summary_df[,2:3],1,function(x){paste(x,collapse='_')})))
od_list
od_list$fluconazole
sapply(od_list$fluconazole,function(x){x})
sapply(od_list$fluconazole,function(x){x$time})
sapply(od_list$fluconazole,function(x){x[[1]]})
unlist(od_time)
unlist(od_list$fluconazole)
hist(unlist(od_list$fluconazole))
fluc_od <- od_list[['fluconazole']]
head(fluc_od)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
conc
geno
time
geno
fluc_od
source('~/.active-rstudio-document', echo=TRUE)
conc
geno
date
fluc_od[[conc]][[geno]][[date]]
source('~/.active-rstudio-document', echo=TRUE)
time <- fluc_od[[conc]][[date]][[geno]]
time
times <- sapply(fluc_od[[conc]][[date]][[geno]],function(x){x$time})
times
times <- t(sapply(fluc_od[[conc]][[date]][[geno]],function(x){x$time}))
times
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
all_times
min(times)
min(times)/3600
max(times)/3600
times
min(all_times)
min(all_times)/3600
max(all_times)/3600
