% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nn_functions.R
\name{merge_many_nn_models}
\alias{merge_many_nn_models}
\title{Train many neural networks and combine the results}
\usage{
merge_many_nn_models(resfile, mapfile, condition_names, genes,
  regularization_rate = 2e-04, learning_rate = 0.05, epochs = 10000,
  batch_size = 1000, runs_averaged = 10, n_clusters = 10,
  validation_split = 0.1, nn_function = make_nn_model,
  weight_merging_function = prune_weight_list, efflux_genes = NULL,
  regularization_rate_indirect = NULL, direct_nn = T)
}
\arguments{
\item{resfile}{a matrix with strain names as row names and condition names as column (same as resistance_file)}

\item{mapfile}{a data frame (or matrix) with strain names as row names and genes (optionally, 'Plate'). Same as genotype_file}

\item{condition_names}{what to name conditions in the neural network (vector of strings)}

\item{genes}{what genes the neural network models in the first layer (and second layer by default)
defaults to column names 2-17 of genotype_file (corresponding to names of all 16 transporters)}

\item{regularization_rate}{regularization rate passed to keras}

\item{learning_rate}{rate for regularizer_l1 passed to keras (L1 regularization rate)}

\item{epochs}{epochs passed to keras; defines number of training epochs}

\item{batch_size}{batch_size passed to keras; defines how many examples to sample in gradient descent}

\item{runs_averaged}{number of runs to combine}

\item{n_clusters}{how many neural networks to train in parallel}

\item{validation_split}{validation_split passed to keras}

\item{nn_function}{function used to train a single neural network (defaults to make_nn_model)}

\item{weight_merging_function}{function used to merge weights defaults to prune_weight_list}

\item{efflux_genes}{vector, what genes the neural network models in the second layer}

\item{regularization_rate_indirect}{L1 regularization rate for the indirect connections in the '3 layer model'}

\item{direct_nn}{TRUE or FALSE, is the model 2 or 3 layers (i.e. are all I weights direct?)}
}
\value{
a list (of the same format to calling get_weights on a keras model), with weights merged from many neural network models
}
\description{
Train many neural networks and combine the results
}
