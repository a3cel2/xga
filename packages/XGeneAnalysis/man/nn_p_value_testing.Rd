% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nn_functions.R
\name{nn_p_value_testing}
\alias{nn_p_value_testing}
\title{p_value testing of neural network models}
\usage{
nn_p_value_testing(initial_model, condition_name, genotype_file,
  resistance_file, nn_model_function = make_nn_model,
  nn_model_parameters = NULL, genes = NULL, efflux_genes = NULL,
  alpha = 0.05, diff_tolerance = 1e-04)
}
\arguments{
\item{initial_model}{a keras transporter neural network model (e.g. in the list returned by make_nn_model)}

\item{condition_name}{a vector of one or more conditions for which to test significant weights}

\item{genotype_file}{a data frame (or matrix) with strain names as row names and genes (optionally, 'Plate')
as column names.  Genotype values for each gene are either 1 for knockout or 0 for wild-type.  Plate is a factor}

\item{resistance_file}{a matrix with strain names as row names and condition names as column}

\item{nn_model_function}{function used to train a single neural network (defaults to make_nn_model)}

\item{nn_model_parameters}{parameters given to nn_model_function (named list with arguments to nn_model_function), populated automatically for make_nn_model etc}

\item{genes}{genes in the first layer of the neural network (and the second layer by default)}

\item{efflux_genes}{genes in the second layer of the neural network}

\item{alpha}{uncorrected p-value cutoff - Bonferroni correction is applied to this automatically}

\item{diff_tolerance}{when calculating a p value, what is the numerical threshold for determining which strain's predictions differ?}
}
\value{
a list (of the same format to calling get_weights on a keras model), with non-significant weights set to 0
}
\description{
p_value testing of neural network models
}
